# Build parameters
GEOZONE1="192.168.1.0/24"
GEOZONE2="192.168.2.0/24"
GEOZONE3="192.168.3.0/24"
GEOZONE4="192.168.4.0/24"
SSH_PORT=22
IF=eth0 # Interface/bridge for which setup will be done
Q_TYPE=egress # Assuming we are serving some resource(use ingress if we are going to receive data)
BANDWIDTH=10240 # Bandwidth in kbps. 
USAGE="[all|fwall|tc]" 
# Build script
target_fwall(){
   info "Set-up firewall"
   exec iptables -A INPUT -s $GEOZONE1 -p icmp -j DROP
   exec iptables -A INPUT -s $GEOZONE2 -p icmp -j DROP
   exec iptables -A INPUT -s $GEOZONE3 -p icmp -j DROP
   exec iptables -A INPUT -s $GEOZONE4 -p icmp -j DROP
   # Assuming we have only one ssh port: 22(defined at $SSH_PORT)  
   exec iptables -A INPUT -s $GEOZONE4 -p tcp -m tcp --dport $SSH_PORT -j DROP 
   success "Done setting-up firewall"
}

target_tc(){
   info "Set-up traffic control"
   # Compute bandwidth 20% and 40%
   bandwidth_20=$(($BANDWIDTH/5))
   bandwidth_40=$((2 * $BANDWIDTH / 5))
   exec tc qdisc add dev $IF root handle 1: htb
   exec tc class add dev $IF parent 1: classid 1:1 htb rate ${BANDWIDTH}kbps
   exec tc class add dev $IF parent 1:1 classid 1:5 htb rate ${bandwidth_40}kbps ceil ${bandwidth_40}kbps 
   exec tc class add dev $IF parent 1:1 classid 1:6 htb rate ${bandwidth_20}kbps ceil ${bandwidth_20}kbps
   exec tc class add dev $IF parent 1:1 classid 1:7 htb rate ${bandwidth_20}kbps ceil ${bandwidth_20}kbps
   exec tc class add dev $IF parent 1:1 classid 1:8 htb rate ${bandwidth_20}kbps ceil ${bandwidth_20}kbps
   exec tc filter add dev $IF parent 1:0 prio 1 protocol ip handle 1 fw flowid 1:5
   exec tc filter add dev $IF parent 1:0 prio 1 protocol ip handle 2 fw flowid 1:6
   exec tc filter add dev $IF parent 1:0 prio 1 protocol ip handle 3 fw flowid 1:7
   exec tc filter add dev $IF parent 1:0 prio 1 protocol ip handle 4 fw flowid 1:8
   exec tc filter add dev $IF parent 1:0 prio 0 protocol ip handle 5 fw flowid 1:8
   exec iptables -A OUTPUT -t mangle -d $GEOZONE1 -j MARK --set-mark 1
   exec iptables -A OUTPUT -t mangle -d $GEOZONE2 -j MARK --set-mark 2
   exec iptables -A OUTPUT -t mangle -d $GEOZONE3 -j MARK --set-mark 3
   exec iptables -A OUTPUT -t mangle -d $GEOZONE4 ! -p udp -j MARK --set-mark 4
   exec iptables -A OUTPUT -t mangle -d $GEOZONE4 -p udp -j MARK --set-mark 5
   success "Traffic control setted up successfully"
}
target_server(){
   require_command MeowMeow
   info "Creating test file"
   exec dd if=/dev/urandom of=/var/www/FatCat bs=16MB count=1 
   exec MeowMeow
}
target_all(){
   require_root
   require_command tc
   require_command iptables
   target_fwall
   target_tc
   target_server
}

